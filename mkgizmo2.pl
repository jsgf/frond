#!/usr/bin/perl

my @giz = ();
my $num = 0;

sub power2($) {
    my ($n) = @_;
    my $c = 1;

    while($c < $n) {
	$c = $c<<1;
    }

    return $c;
}

print <<EOF;
/* Generated by mkgizmo.pl: do not edit */
#include "pwm.h"
#include "misc.h"
#include "rand.h"

EOF

foreach $i (@ARGV) {
    $i =~ s,^.*/,,;
    $i =~ s,\.o$,,;

    push @giz, $i;
    $num++;

    print "extern giz_init_t ${i}_init;\n";
    print "extern giz_pix_t ${i}_pix;\n\n";
}

print <<EOF;
giz_pix_t *nextgiz()
{
	giz_pix_t *g = 0;
	giz_init_t *init = 0;
EOF

if ($num == 1) {
	my ($i) = $giz[0];
	print "\n\tinit = ${i}_init;\n";
	print "\tg = ${i}_pix;\n";
} else {
    my $p2 = power2($num);
    my $c = 0;

    print "\tunsigned char t = rand() & ($p2-1);\n\n";

    foreach $i (@giz) {
        print "\tif (t == $c) { init = ${i}_init; g = ${i}_pix; } else \n";
        $c++;
    }
    print "\t{}\n";
}

print <<EOF;

	if (init) {
		unsigned char *cp = SHBSS;
		unsigned char sz = (*init)();
		while(sz--)
			*cp++ = 0;
	}

	return g;
}
EOF
